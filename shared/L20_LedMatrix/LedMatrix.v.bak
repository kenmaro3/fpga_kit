module m_font_rom(input [5:0] radr, output [9:0] dat);
	function [9:0] FontDec;
		input [5:0] dadr;
		begin
			case(dadr)
				6'd03: FondDec=10'h1ff;
				6'd04: FondDec=10'h010;
				6'd05: FondDec=10'h010;
				6'd06: FondDec=10'h010;
				6'd07: FondDec=10'h1ff;
				6'd11: FondDec=10'h1ff;
				6'd12: FondDec=10'h111;
				6'd13: FondDec=10'h111;
				6'd14: FondDec=10'h111;
				6'd15: FondDec=10'h101;
				6'd19: FondDec=10'h1ff;
				6'd20: FondDec=10'h100;
				6'd21: FondDec=10'h100;
				6'd22: FondDec=10'h100;
				6'd23: FondDec=10'h100;
				6'd27: FondDec=10'h1ff;
				6'd28: FondDec=10'h021;
				6'd29: FondDec=10'h021;
				6'd30: FondDec=10'h021;
				6'd31: FondDec=10'h01e;
				default: FontDec=10'h000;
				endcase
			end
		endfunction
		assign dat=FontDec(radr);
endmodule


module m_1ms_clk(input clk, output clk1ms);
	reg [19:0] cnt;
	reg r1ms;
	wire wcout;
	
	assign wcout=(cnt==20'd24999) ? 1'b1 : 1'b0;
	assign clk1ms=r1ms;
	always @(posedge clk) begin
		if(wcout==1'b1) begin
			cnt=0;
			r1ms=~r1ms;
		end
		else begin
			cnt=cnt+1;
		end
	end
endmodule
				