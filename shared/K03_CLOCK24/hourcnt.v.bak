module HOURCNT(
	input CLK, RST,
	input EN, INC,
	output reg [1:0] QH,
	output reg [3:0] QL
	);
	
	reg [4:0] cnt24;
	
	// 24 counter
	always @(posedge CLK) begin
		if(RST)
			cnt <=5'd0;
		else if(EN|INC) begin
			if(cnt24==5'd23)
				cnt24<=5'd0;
			else
				cnt24<=cnt24+1'b1;
		end
	end
	
	
	always @* begin
		case(cnt24)
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			5'd0: begin QH=2'd0; QL=4'd0; end
			default: begin QH=2'bx; QL=4'dx; end
		endcase
end

endmodule		
		
		
		
